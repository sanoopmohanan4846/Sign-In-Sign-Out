"""
Django settings for signinoutproject project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-e3n&bk82n77--hwhh%)^x1sevxr7aj989uh*d3_f5xc4$&2--c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
 

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    
    
    'django.contrib.sites',              #for the site_id = 1
    'signinoutapp',                            #app name
    
    'allauth',             #all auth code 
    'allauth.account',
    
    'allauth.socialaccount',                   #adding social account
    
    'allauth.socialaccount.providers.github',   #login with google
    'allauth.socialaccount.providers.google',
    
    # widget
    'widget_tweaks',
 
    # for 2 factor authentication
    'allauth.mfa',
    
    
    # session
    'django.contrib.humanize',
    'allauth.usersessions',
]
SITE_ID = 1


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    # allauth
    "allauth.account.middleware.AccountMiddleware",
    
    # session
    'allauth.usersessions.middleware.UserSessionsMiddleware',

]



ROOT_URLCONF = 'signinoutproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'signinoutproject.wsgi.application'




AUTHENTICATION_BACKENDS = [
    
    'django.contrib.auth.backends.ModelBackend',

    # 'allauth.account.auth_backends.AuthenticationBackend',
    
]

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),]
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
#     # Other directories
# ]
 

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#  Email Sending Config Using google
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'demomail1500@gmail.com'
EMAIL_HOST_PASSWORD = 'qsgacaixviawrjqp'


#  to redirect login to home page
LOGIN_REDIRECT_URL = '/'


#  for logining with gmail and makig gmail to be requred 
ACCOUNT_EMAIL_REQUIRED=True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"


#  heir i have given the value True so only one email can be use 
#  if you give the valeue false so you can loging with more than one account 
ACCOUNT_CHANGE_EMAIL = True

# password reset code mail expire date
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 1


ACCOUNT_EMAIL_NOTIFICATIONS = True


# Email subject prefix, in the email it shows the company name instead of number or addres
ACCOUNT_EMAIL_SUBJECT_PREFIX = '[Footware] '

# if you dont have an accout and want to send mail to reset the password it is to stop doing that
ACCOUNT_EMAIL_UNKNOWN_ACCOUNTS = True


# to sent one time loging by send one time code to the user account
ACCOUNT_LOGIN_BY_CODE_ENABLED = True

# This setting controls the maximum number of attempts the user has at inputting a valid code.
ACCOUNT_LOGIN_BY_CODE_MAX_ATTEMPTS = 4

# The code that is emailed has a limited life span. It expires this many seconds after which it was sent.
ACCOUNT_LOGIN_BY_CODE_TIMEOUT = 120

# users will automatically be logged in once they confirm their email address.
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = False


ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = True
# Determines whether or not the user is automatically logged out after changing or setting their password


ACCOUNT_LOGIN_ON_PASSWORD_RESET = False
# By changing this setting to True, users will automatically be logged in once they have reset their password. By default they are redirected to the password reset done page.

LOGOUT_REDIRECT_URL="/"
# ACCOUNT_LOGOUT_REDIRECT_URL = "/"
# The URL (or URL name) to return to after the user logs out. Defaults to Django’s LOGOUT_REDIRECT_URL, unless that is empty, then "/" is used.

ACCOUNT_SESSION_REMEMBER = False
# Controls the life time of the session. Set to None to ask the user (“Remember me?”), False to not remember, and True to always remember.

ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
# When signing up, let the user type in their password twice to avoid typos.


ACCOUNT_USERNAME_BLACKLIST = ['admin', 'footware']
# A list of usernames that can’t be used by user.

ACCOUNT_UNIQUE_EMAIL = True 
# only one user account can have an email address marked as verified. prevent a user from registering with or adding an additional email address if that email address is in use by another account.

ACCOUNT_USERNAME_MIN_LENGTH = 2
# An integer specifying the minimum allowed length of a username.


SOCIALACCOUNT_PROVIDERS = {
    "github": {
        "SCOPE": [
            'user',
            'repo',
            'read:org',
        ], 
        "VERIFIED_EMAIL": True
    },
    "google": {
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
        'OATH_PKCE_ENABLE' : True
    }
}



















